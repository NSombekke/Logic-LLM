Natural Language,Formula,GPT-3,Description, More
"Every a is eventually followed by an e.","G(a -> F e)",G (a -> F e),"{'Every': 'G', 'eventually': 'F', 'a': 'a', 'e': 'e', 'a followed by an e': 'a -> e', 'a eventually followed by an e': 'a -> F e'}",Equivalent
"It is never the case that a and b hold at the same time.","G(!(a & b))",G(!(a & b)),"{'a and b': 'a & b', 'It is never the case that a and b hold at the same time': 'G(!(a & b))'}",Equivalent
"Whenever a is enabled, b is enabled three steps later.","G(a -> X (X (X b)))",G (a -> XXX b),"{'Whenever': 'G', 'a is enabled': 'a', 'b is enabled three steps later': 'XXX b', 'Whenever a is enabled, b is enabled three steps later': 'a -> XXX b'}",Equivalent
"e must hold everywhere until from some point on, d holds infinitely often.","e U (G (F d))",e U (G F d),"{'e must hold everywhere until from some point on, d holds infinitely often': 'e U (G F d)'}",Equivalent
"If b holds at some point, a has to hold somewhere beforehand.","(F b) -> (!b U (a & !b))",b -> F a, "{'If b holds at some point, a has to hold somewhere beforehand': 'b -> F a'}",
"Whenever a holds, b holds as well.","G(a -> b)",a -> b,"{'Whenever a holds, b holds as well': 'a -> b'}",
"Both a and b hold in every time step.","G (a & b)",G(a & b),"{'Both a and b hold in every time step': 'G(a & b)'}",
"a holds always and whenever b holds, c does not hold.","G a & G(b -> !c)",G a & (b -> !c),"{'a holds always': 'G a', 'whenever b holds, c does not hold': 'b -> !c'}",
"If it is the case that every a is eventually followed by a b, then c needs to holds infinitely often.","G(a -> F b) -> G F c",G(a -> F b) -> G F c,"{'If it is the case that every a is eventually followed by a b': 'G(a -> F b)', 'then c needs to hold infinitely often': 'G F c'}",
"If a holds infinitely often, then b holds infinitely often as well.","G F a -> G F b",G F a -> G F b,"{'If a holds infinitely often': 'G F a', 'then b holds infinitely often as well': 'G F b'}",
"Either a or b holds infinitely often","G F a || G F b",F(a | b),"{'Either a or b holds infinitely often': 'F(a | b)'}",
"a never holds from some point in time on.","F G ! a","F (!a)","{'a': 'a', 'never holds': '!a', 'from some point in time on': 'F'}",
"Whenever a and b do not hold, c holds eventually.","G (!(a & b) -> F c)","G(!(a | b) -> F c)","{'Whenever': 'G', 'a': 'a', 'b': 'b', 'do not hold': '!(a | b)', 'c': 'c', 'holds eventually': 'F c'}",
"a and b never occur at the same time but one of them holds in every time step.","G(!(a &b)) & G(a || b)",G(!(a & b)) & G(a | b),"{'a and b': 'a & b', 'a and b never occur': 'G(!(a & b))', 'one of them holds in every time step': 'G(a | b)'}",
"Whenever the inputs a and b are the same, the outputs c and d are the same.","G ((a <-> b) -> (c <-> d))","G((a <-> b) -> (c <-> d))","{'Whenever': 'G', 'the inputs a and b are the same': 'a <-> b', 'the outputs c and d are the same': 'c <-> d'}",
"a can only happen if b happened before.","(! a) U b","G(a -> F b)","{'a': 'a', 'can only happen if': '->', 'b': 'b', 'happened before': 'F b'}",
"Once a happened, b won't happen again.","G (a -> X G ! b)","G(a -> G(!b))","{'Once': 'F', 'a': 'a', 'b': 'b', 'won't happen again': 'G(!b)'}",
"a releases b.","(b U (b & ! a)) | G b","G(a -> Fb) & Fb.","{'a releases b': 'G(a -> Fb) & Fb'}",
"a and b won't occur at the same time.","G !(a & b)","G(!(a & b))","{'a and b won't occur at the same time': 'G(!(a & b))'}",
"Whenever a holds, b holds eventually from the next step on.","G (a -> X F b)","G(a -> (X b -> X c))","{'Whenever': 'G', 'a holds': 'a', 'b holds in the next step': 'X b', 'then': '->', 'c holds one step after b': '(b -> X c)'}",
"a holds in every fifth step.","a & G (a -> X ! a & X X ! a & X X X ! a & X X X X ! a & X X X X X a)","X^5 a","{'a holds in every fifth step': 'G(X^5 a)'}",
"Either a holds infinitely often or b holds in the next step.","G F a || X b","F(a) | X(b)","{'Either': 'or', 'a holds infinitely often': 'F(a)', 'b holds in the next step': 'X(b)'}",
"a will hold at all instances.","G (a)","G(a)","{'a will hold at all instances': 'G(a)'}",
"Whenever a holds, b must hold in the next two steps.","G (a -> (b | X b))","G(a -> (X(b) & XX(b)))","{'Whenever': 'G', 'a holds': 'a', 'b must hold in the next two steps': 'X(b) & XX(b)'}",
"One of the following aps will hold at all instances: a,b,c.","G (a | b | c)","G(a | b | c)","{'One of the following propositions will hold at all instances': 'G(a | b | c)'}",
"If a holds b will eventually hold.","G (a -> F b)","a -> F(b)","{'If': '->', 'a holds':'a', 'b will eventually hold': 'F(b)'}",
"a must always hold, but if is exceeds, it allow two timestamps to recover.","! G (! (a & X a))","G(a) & ((a -> F(a)) U X(X(a)))","{'a must always hold': 'G(a)', 'it allows two timestamps to recover': '(a -> F(a)) U X(X(a))'}",
"not a holds at most two timestamps.","! G (! (a & X a))","G(!(a U (a U a)))","{'not a holds at most two timestamps': 'G(!(a U (a U a)))'}",
"a can only hold every three timestamps.","G ( a -> (X !a | XX !a | XXX !a))","G(a <-> F(X^3 a))","{'a can only hold every three timestamps': 'G(a <-> F(X^3 a))'}",
"Every a is followed by a b.","G ( a -> X b)","G(a -> Fb)","{'Every a is followed by a b': 'G(a -> Fb)'}",
"Eventually a and b hold.","F (a & b)","F(a & b)","{'Eventually a and b hold': 'F(a & b)'}",
"Both a and b hold eventually.","F a & F b",,,
"It is always the case that a is the same as b in the next step.","G (a <-> X b)","G(a <-> Xb)","{'It is always the case that a is the same as b in the next step': 'G(a <-> Xb)'}",
"If b holds then, in the next step, c holds until a holds or always c holds.","b -> X ((c U a) || G c)","b -> (Xc U a | G c)","{'If b holds then': 'b ->', 'In the next step, c holds until a holds or always c holds': '(Xc U a | G c)'}",
"a holds until b holds or always a holds.","(a U b) || G a","a U b | G a","{'a holds until b holds': 'a U b', 'or always a holds': 'G a'}",


